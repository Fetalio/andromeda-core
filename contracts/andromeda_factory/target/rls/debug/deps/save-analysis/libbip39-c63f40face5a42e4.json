{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1","program":"/Users/connor/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bip39","/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","--cfg","feature=\"unicode-normalization\"","-C","metadata=c63f40face5a42e4","-C","extra-filename=-c63f40face5a42e4","--out-dir","/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps","-L","dependency=/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps","--extern","bitcoin_hashes=/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps/libbitcoin_hashes-a0fd3333b2041ee8.rmeta","--extern","rand_core=/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps/librand_core-25f5906fe0580b48.rmeta","--extern","serde=/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps/libserde-f0a17be51da7a587.rmeta","--extern","unicode_normalization=/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps/libunicode_normalization-52f0150f333e1f20.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/connor/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/connor/dev/terra/terra-nft-contract/target/rls/debug/deps/libbip39-c63f40face5a42e4.rmeta"},"prelude":{"crate_id":{"name":"bip39","disambiguator":[5243704160969481583,18324984532401083726]},"crate_root":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src","external_crates":[{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8089372304544504840,2527656813180266519]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8996585198574955197,10064433740309368892]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11464076584146293375,1944750198668660233]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13665112390248177411,18026488694072058539]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4173548784217791313,6413716694370064316]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4417783556059781835,6377966464484580742]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16465050104586441903,11486803546517078730]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4077680908246514517,3259883106732070033]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1548350640775673346,17931765307891215690]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[3115519341803559472,4584691163881866229]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[8103449524405359139,17525483118853280774]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16653067590616142994,3376435367795585491]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[12324169339618228571,8193712517758892028]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[11110532902483564599,1367988466669347686]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[9623270257962620076,7602523633458697349]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":16,"id":{"name":"bitcoin_hashes","disambiguator":[10313957694928800975,9271407863846066050]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":17,"id":{"name":"rand_core","disambiguator":[12228706251514570885,7530275355659008401]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":18,"id":{"name":"unicode_normalization","disambiguator":[17321333512291731948,5899696941940938908]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":19,"id":{"name":"smallvec","disambiguator":[5027856249293413171,8849620433603135650]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":20,"id":{"name":"maybe_uninit","disambiguator":[15417383647926815544,8778947873730891941]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":21,"id":{"name":"serde","disambiguator":[3636794439044327394,6306029438616188946]}},{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","num":22,"id":{"name":"serde_derive","disambiguator":[16817694581242650275,1924901723208722747]}}],"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":487,"byte_end":42118,"line_start":14,"line_end":1014,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1467,"byte_end":1475,"line_start":61,"line_end":61,"column_start":19,"column_end":27},"alias_span":null,"name":"Language","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":487,"byte_end":42118,"line_start":14,"line_end":1014,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":54},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":180},{"krate":0,"index":196},{"krate":0,"index":193},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":184},{"krate":0,"index":90},{"krate":0,"index":198},{"krate":0,"index":223},{"krate":0,"index":221},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":213},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":225},{"krate":0,"index":246},{"krate":0,"index":244},{"krate":0,"index":241},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":231},{"krate":0,"index":229},{"krate":0,"index":248},{"krate":0,"index":274},{"krate":0,"index":101},{"krate":0,"index":154},{"krate":0,"index":156}],"decl_id":null,"docs":" # BIP39 Mnemonic Codes","sig":null,"attributes":[{"value":"/ # BIP39 Mnemonic Codes","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":487,"byte_end":513,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":514,"byte_end":517,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ We currently don't implement seed generation from the phrase.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":518,"byte_end":583,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":584,"byte_end":587,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":588,"byte_end":654,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":655,"byte_end":658,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":660,"byte_end":692,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":693,"byte_end":723,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":724,"byte_end":748,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":749,"byte_end":769,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"deny(dead_code)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":770,"byte_end":789,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"deny(unused_imports)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":790,"byte_end":814,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":815,"byte_end":837,"line_start":27,"line_end":27,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":160},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44323,"byte_end":44330,"line_start":31,"line_end":31,"column_start":2,"column_end":9},"name":"English","qualname":"::language::Language::English","value":"Language::English","parent":{"krate":0,"index":159},"children":[],"decl_id":null,"docs":" The English language.\n","sig":null,"attributes":[{"value":"/ The English language.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44296,"byte_end":44321,"line_start":30,"line_end":30,"column_start":2,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":159},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44284,"byte_end":44292,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"Language","qualname":"::language::Language","value":"pub enum Language { English, }","parent":null,"children":[{"krate":0,"index":160}],"decl_id":null,"docs":" Language to be used for the mnemonic phrase.","sig":null,"attributes":[{"value":"/ Language to be used for the mnemonic phrase.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44044,"byte_end":44092,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44093,"byte_end":44096,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The English language is always available, other languages are enabled using","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44097,"byte_end":44176,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ the compilation features.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44177,"byte_end":44206,"line_start":27,"line_end":27,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":45037,"byte_end":45040,"line_start":61,"line_end":61,"column_start":9,"column_end":12},"name":"all","qualname":"<Language>::all","value":"pub fn all() -> &'static [Language]","parent":null,"children":[],"decl_id":null,"docs":" The list of supported languages.\n Language support is managed by compile features.\n","sig":null,"attributes":[{"value":"/ The list of supported languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44938,"byte_end":44974,"line_start":59,"line_end":59,"column_start":2,"column_end":38}},{"value":"/ Language support is managed by compile features.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44976,"byte_end":45028,"line_start":60,"line_end":60,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":47201,"byte_end":47216,"line_start":133,"line_end":133,"column_start":9,"column_end":24},"name":"words_by_prefix","qualname":"<Language>::words_by_prefix","value":"pub fn words_by_prefix(Self, &str) -> &[&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Get words from the word list that start with the given prefix.\n","sig":null,"attributes":[{"value":"/ Get words from the word list that start with the given prefix.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":47126,"byte_end":47192,"line_start":132,"line_end":132,"column_start":2,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1910,"byte_end":1928,"line_start":76,"line_end":76,"column_start":12,"column_end":30},"name":"AmbiguousLanguages","qualname":"::AmbiguousLanguages","value":"","parent":null,"children":[],"decl_id":null,"docs":" A structured used in the [Error::AmbiguousLanguages] variant that iterates\n over the possible languages.\n","sig":null,"attributes":[{"value":"/ A structured used in the [Error::AmbiguousLanguages] variant that iterates","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1742,"byte_end":1820,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ over the possible languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1821,"byte_end":1853,"line_start":74,"line_end":74,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2135,"byte_end":2143,"line_start":81,"line_end":81,"column_start":9,"column_end":17},"name":"as_bools","qualname":"<AmbiguousLanguages>::as_bools","value":"pub fn as_bools(&Self) -> &[bool; ]","parent":null,"children":[],"decl_id":null,"docs":" Presents the possible languages in the form of a slice of booleans\n that correspond to the occurrences in [Language::all()].\n","sig":null,"attributes":[{"value":"/ Presents the possible languages in the form of a slice of booleans","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1994,"byte_end":2064,"line_start":79,"line_end":79,"column_start":2,"column_end":72}},{"value":"/ that correspond to the occurrences in [Language::all()].","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2066,"byte_end":2126,"line_start":80,"line_end":80,"column_start":2,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2260,"byte_end":2264,"line_start":86,"line_end":86,"column_start":9,"column_end":13},"name":"iter","qualname":"<AmbiguousLanguages>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the possible languages.\n","sig":null,"attributes":[{"value":"/ An iterator over the possible languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2207,"byte_end":2251,"line_start":85,"line_end":85,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2486,"byte_end":2492,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"name":"to_vec","qualname":"<AmbiguousLanguages>::to_vec","value":"pub fn to_vec(&Self) -> Vec<Language>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of the possible languages.\n","sig":null,"attributes":[{"value":"/ Returns a vector of the possible languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2405,"byte_end":2452,"line_start":90,"line_end":90,"column_start":2,"column_end":49}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2454,"byte_end":2477,"line_start":91,"line_end":91,"column_start":2,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2691,"byte_end":2703,"line_start":101,"line_end":101,"column_start":2,"column_end":14},"name":"BadWordCount","qualname":"::Error::BadWordCount","value":"Error::BadWordCount(usize)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Mnemonic has a word count that is not a multiple of 6.\n","sig":null,"attributes":[{"value":"/ Mnemonic has a word count that is not a multiple of 6.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2631,"byte_end":2689,"line_start":100,"line_end":100,"column_start":2,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":202},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2859,"byte_end":2870,"line_start":105,"line_end":105,"column_start":2,"column_end":13},"name":"UnknownWord","qualname":"::Error::UnknownWord","value":"Error::UnknownWord(usize)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Mnemonic contains an unknown word.\n Error contains the index of the word.\n Use `mnemonic.split_whitespace().get(i)` to get the word.\n","sig":null,"attributes":[{"value":"/ Mnemonic contains an unknown word.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2713,"byte_end":2751,"line_start":102,"line_end":102,"column_start":2,"column_end":40}},{"value":"/ Error contains the index of the word.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2753,"byte_end":2794,"line_start":103,"line_end":103,"column_start":2,"column_end":43}},{"value":"/ Use `mnemonic.split_whitespace().get(i)` to get the word.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2796,"byte_end":2857,"line_start":104,"line_end":104,"column_start":2,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":205},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2959,"byte_end":2977,"line_start":107,"line_end":107,"column_start":2,"column_end":20},"name":"BadEntropyBitCount","qualname":"::Error::BadEntropyBitCount","value":"Error::BadEntropyBitCount(usize)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" Entropy was not a multiple of 32 bits or between 128-256n bits in length.\n","sig":null,"attributes":[{"value":"/ Entropy was not a multiple of 32 bits or between 128-256n bits in length.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2880,"byte_end":2957,"line_start":106,"line_end":106,"column_start":2,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":208},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3030,"byte_end":3045,"line_start":109,"line_end":109,"column_start":2,"column_end":17},"name":"InvalidChecksum","qualname":"::Error::InvalidChecksum","value":"Error::InvalidChecksum","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The mnemonic has an invalid checksum.\n","sig":null,"attributes":[{"value":"/ The mnemonic has an invalid checksum.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2987,"byte_end":3028,"line_start":108,"line_end":108,"column_start":2,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":210},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3202,"byte_end":3220,"line_start":113,"line_end":113,"column_start":2,"column_end":20},"name":"AmbiguousLanguages","qualname":"::Error::AmbiguousLanguages","value":"Error::AmbiguousLanguages(AmbiguousLanguages)","parent":{"krate":0,"index":198},"children":[],"decl_id":null,"docs":" The mnemonic can be interpreted as multiple languages.\n Use the helper methods of the inner struct to inspect\n which languages are possible.\n","sig":null,"attributes":[{"value":"/ The mnemonic can be interpreted as multiple languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3048,"byte_end":3106,"line_start":110,"line_end":110,"column_start":2,"column_end":60}},{"value":"/ Use the helper methods of the inner struct to inspect","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3108,"byte_end":3165,"line_start":111,"line_end":111,"column_start":2,"column_end":59}},{"value":"/ which languages are possible.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3167,"byte_end":3200,"line_start":112,"line_end":112,"column_start":2,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":198},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2622,"byte_end":2627,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    BadWordCount(usize),\n    UnknownWord(usize),\n    BadEntropyBitCount(usize),\n    InvalidChecksum,\n    AmbiguousLanguages(AmbiguousLanguages),\n}","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":210}],"decl_id":null,"docs":" A BIP39 error.\n","sig":null,"attributes":[{"value":"/ A BIP39 error.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":2549,"byte_end":2567,"line_start":97,"line_end":97,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4443,"byte_end":4451,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"Mnemonic","qualname":"::Mnemonic","value":"Mnemonic {  }","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" A mnemonic code.","sig":null,"attributes":[{"value":"/ A mnemonic code.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4087,"byte_end":4107,"line_start":147,"line_end":147,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4108,"byte_end":4111,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ The [core::str::FromStr] implementation will try to determine the language of the","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4112,"byte_end":4197,"line_start":149,"line_end":149,"column_start":1,"column_end":86}},{"value":"/ mnemonic from all the supported languages. (Languages have to be explicitly enabled using","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4198,"byte_end":4291,"line_start":150,"line_end":150,"column_start":1,"column_end":94}},{"value":"/ the Cargo features.)","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4292,"byte_end":4316,"line_start":151,"line_end":151,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4317,"byte_end":4320,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Supported number of words are 12, 18 and 24.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4321,"byte_end":4369,"line_start":153,"line_end":153,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":5370,"byte_end":5385,"line_start":180,"line_end":180,"column_start":9,"column_end":24},"name":"from_entropy_in","qualname":"<Mnemonic>::from_entropy_in","value":"pub fn from_entropy_in(Language, &[u8]) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [Mnemonic] in the specified language from the given entropy.\n Entropy must be a multiple of 32 bits (4 bytes) and 128-256 bits in length.\n","sig":null,"attributes":[{"value":"/ Create a new [Mnemonic] in the specified language from the given entropy.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":5203,"byte_end":5280,"line_start":178,"line_end":178,"column_start":2,"column_end":79}},{"value":"/ Entropy must be a multiple of 32 bits (4 bytes) and 128-256 bits in length.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":5282,"byte_end":5361,"line_start":179,"line_end":179,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6592,"byte_end":6604,"line_start":226,"line_end":226,"column_start":9,"column_end":21},"name":"from_entropy","qualname":"<Mnemonic>::from_entropy","value":"pub fn from_entropy(&[u8]) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new English [Mnemonic] from the given entropy.\n Entropy must be a multiple of 32 bits (4 bytes) and 128-256 bits in length.\n","sig":null,"attributes":[{"value":"/ Create a new English [Mnemonic] from the given entropy.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6443,"byte_end":6502,"line_start":224,"line_end":224,"column_start":2,"column_end":61}},{"value":"/ Entropy must be a multiple of 32 bits (4 bytes) and 128-256 bits in length.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6504,"byte_end":6583,"line_start":225,"line_end":225,"column_start":2,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":7150,"byte_end":7166,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"name":"generate_in_with","qualname":"<Mnemonic>::generate_in_with","value":"pub fn generate_in_with<R>(&mut R, Language, usize) -> Result<Mnemonic, Error>\nwhere R: rand_core::RngCore + rand_core::CryptoRng","parent":null,"children":[],"decl_id":null,"docs":" Generate a new [Mnemonic] in the given language\n with the given randomness source.\n For the different supported word counts, see documentation on [Mnemonic].","sig":null,"attributes":[{"value":"/ Generate a new [Mnemonic] in the given language","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6711,"byte_end":6762,"line_start":230,"line_end":230,"column_start":2,"column_end":53}},{"value":"/ with the given randomness source.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6764,"byte_end":6801,"line_start":231,"line_end":231,"column_start":2,"column_end":39}},{"value":"/ For the different supported word counts, see documentation on [Mnemonic].","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6803,"byte_end":6880,"line_start":232,"line_end":232,"column_start":2,"column_end":79}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6882,"byte_end":6885,"line_start":233,"line_end":233,"column_start":2,"column_end":5}},{"value":"/ Example:","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6887,"byte_end":6899,"line_start":234,"line_end":234,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6901,"byte_end":6904,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ ```","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6906,"byte_end":6913,"line_start":236,"line_end":236,"column_start":2,"column_end":9}},{"value":"/ extern crate rand;","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6915,"byte_end":6937,"line_start":237,"line_end":237,"column_start":2,"column_end":24}},{"value":"/ extern crate bip39;","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6939,"byte_end":6962,"line_start":238,"line_end":238,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6964,"byte_end":6967,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ use bip39::{Mnemonic, Language};","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":6969,"byte_end":7005,"line_start":240,"line_end":240,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":7007,"byte_end":7010,"line_start":241,"line_end":241,"column_start":2,"column_end":5}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":7012,"byte_end":7049,"line_start":242,"line_end":242,"column_start":2,"column_end":39}},{"value":"/ let m = Mnemonic::generate_in_with(&mut rng, Language::English, 24).unwrap();","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":7051,"byte_end":7132,"line_start":243,"line_end":243,"column_start":2,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":7134,"byte_end":7141,"line_start":244,"line_end":244,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":8674,"byte_end":8682,"line_start":298,"line_end":298,"column_start":9,"column_end":17},"name":"language","qualname":"<Mnemonic>::language","value":"pub fn language(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Get the language of the [Mnemonic].\n","sig":null,"attributes":[{"value":"/ Get the language of the [Mnemonic].","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":8626,"byte_end":8665,"line_start":297,"line_end":297,"column_start":2,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":8765,"byte_end":8774,"line_start":303,"line_end":303,"column_start":9,"column_end":18},"name":"word_iter","qualname":"<Mnemonic>::word_iter","value":"pub fn word_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the words.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the words.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":8721,"byte_end":8756,"line_start":302,"line_end":302,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11399,"byte_end":11410,"line_start":373,"line_end":373,"column_start":9,"column_end":20},"name":"language_of","qualname":"<Mnemonic>::language_of","value":"pub fn language_of<S: AsRef<str>>(S) -> Result<Language, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determine the language of the mnemonic.","sig":null,"attributes":[{"value":"/ Determine the language of the mnemonic.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":10878,"byte_end":10921,"line_start":363,"line_end":363,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":10923,"byte_end":10926,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ NOTE: This method only guarantees that the returned language is the","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":10928,"byte_end":10999,"line_start":365,"line_end":365,"column_start":2,"column_end":73}},{"value":"/ correct language on the assumption that the mnemonic is valid.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11001,"byte_end":11067,"line_start":366,"line_end":366,"column_start":2,"column_end":68}},{"value":"/ It does not itself validate the mnemonic.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11069,"byte_end":11114,"line_start":367,"line_end":367,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11116,"byte_end":11119,"line_start":368,"line_end":368,"column_start":2,"column_end":5}},{"value":"/ Some word lists don't guarantee that their words don't occur in other","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11121,"byte_end":11194,"line_start":369,"line_end":369,"column_start":2,"column_end":75}},{"value":"/ word lists. In the extremely unlikely case that a word list can be","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11196,"byte_end":11266,"line_start":370,"line_end":370,"column_start":2,"column_end":72}},{"value":"/ interpreted in multiple languages, an [Error::AmbiguousLanguages] is","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11268,"byte_end":11340,"line_start":371,"line_end":371,"column_start":2,"column_end":74}},{"value":"/ returned, containing the possible languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11342,"byte_end":11390,"line_start":372,"line_end":372,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11611,"byte_end":11630,"line_start":378,"line_end":378,"column_start":9,"column_end":28},"name":"parse_in_normalized","qualname":"<Mnemonic>::parse_in_normalized","value":"pub fn parse_in_normalized(Language, &str) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a mnemonic in normalized UTF8 in the given language.\n","sig":null,"attributes":[{"value":"/ Parse a mnemonic in normalized UTF8 in the given language.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":11540,"byte_end":11602,"line_start":377,"line_end":377,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13008,"byte_end":13024,"line_start":426,"line_end":426,"column_start":9,"column_end":25},"name":"parse_normalized","qualname":"<Mnemonic>::parse_normalized","value":"pub fn parse_normalized(&str) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a mnemonic in normalized UTF8.\n","sig":null,"attributes":[{"value":"/ Parse a mnemonic in normalized UTF8.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":12959,"byte_end":12999,"line_start":425,"line_end":425,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13226,"byte_end":13234,"line_start":433,"line_end":433,"column_start":9,"column_end":17},"name":"parse_in","qualname":"<Mnemonic>::parse_in","value":"pub fn parse_in<'a, S: Into<Cow>>(Language, S) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a mnemonic in the given language.\n","sig":null,"attributes":[{"value":"/ Parse a mnemonic in the given language.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13149,"byte_end":13192,"line_start":431,"line_end":431,"column_start":2,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13194,"byte_end":13217,"line_start":432,"line_end":432,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13565,"byte_end":13570,"line_start":444,"line_end":444,"column_start":9,"column_end":14},"name":"parse","qualname":"<Mnemonic>::parse","value":"pub fn parse<'a, S: Into<Cow>>(S) -> Result<Mnemonic, Error>","parent":null,"children":[],"decl_id":null,"docs":" Parse a mnemonic and detect the language from the enabled languages.\n","sig":null,"attributes":[{"value":"/ Parse a mnemonic and detect the language from the enabled languages.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13459,"byte_end":13531,"line_start":442,"line_end":442,"column_start":2,"column_end":74}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13533,"byte_end":13556,"line_start":443,"line_end":443,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13949,"byte_end":13959,"line_start":458,"line_end":458,"column_start":9,"column_end":19},"name":"word_count","qualname":"<Mnemonic>::word_count","value":"pub fn word_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the number of words in the mnemonic.\n","sig":null,"attributes":[{"value":"/ Get the number of words in the mnemonic.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":13896,"byte_end":13940,"line_start":457,"line_end":457,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14110,"byte_end":14128,"line_start":463,"line_end":463,"column_start":9,"column_end":27},"name":"to_seed_normalized","qualname":"<Mnemonic>::to_seed_normalized","value":"pub fn to_seed_normalized(&Self, &str) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert to seed bytes with a passphrase in normalized UTF8.\n","sig":null,"attributes":[{"value":"/ Convert to seed bytes with a passphrase in normalized UTF8.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14038,"byte_end":14101,"line_start":462,"line_end":462,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14474,"byte_end":14481,"line_start":479,"line_end":479,"column_start":9,"column_end":16},"name":"to_seed","qualname":"<Mnemonic>::to_seed","value":"pub fn to_seed<'a, P: Into<Cow>>(&Self, P) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert to seed bytes.\n","sig":null,"attributes":[{"value":"/ Convert to seed bytes.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14414,"byte_end":14440,"line_start":477,"line_end":477,"column_start":2,"column_end":28}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14442,"byte_end":14465,"line_start":478,"line_end":478,"column_start":2,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14923,"byte_end":14939,"line_start":491,"line_end":491,"column_start":9,"column_end":25},"name":"to_entropy_array","qualname":"<Mnemonic>::to_entropy_array","value":"pub fn to_entropy_array(&Self) -> ([u8; ], usize)","parent":null,"children":[],"decl_id":null,"docs":" Convert the mnemonic back to the entropy used to generate it.\n The return value is a byte array and the size.\n Use [Mnemonic::to_entropy] (needs `std`) to get a [Vec<u8>].\n","sig":null,"attributes":[{"value":"/ Convert the mnemonic back to the entropy used to generate it.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14731,"byte_end":14796,"line_start":488,"line_end":488,"column_start":2,"column_end":67}},{"value":"/ The return value is a byte array and the size.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14798,"byte_end":14848,"line_start":489,"line_end":489,"column_start":2,"column_end":52}},{"value":"/ Use [Mnemonic::to_entropy] (needs `std`) to get a [Vec<u8>].","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":14850,"byte_end":14914,"line_start":490,"line_end":490,"column_start":2,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":15916,"byte_end":15926,"line_start":528,"line_end":528,"column_start":9,"column_end":19},"name":"to_entropy","qualname":"<Mnemonic>::to_entropy","value":"pub fn to_entropy(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert the mnemonic back to the entropy used to generate it.\n","sig":null,"attributes":[{"value":"/ Convert the mnemonic back to the entropy used to generate it.","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":15817,"byte_end":15882,"line_start":526,"line_end":526,"column_start":2,"column_end":67}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":15884,"byte_end":15907,"line_start":527,"line_end":527,"column_start":2,"column_end":25}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44926,"byte_end":44934,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":48031,"byte_end":48039,"line_start":154,"line_end":154,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1972,"byte_end":1990,"line_start":78,"line_end":78,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3267,"byte_end":3272,"line_start":116,"line_end":116,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4077,"byte_end":4082,"line_start":145,"line_end":145,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4703,"byte_end":4711,"line_start":165,"line_end":165,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":16042,"byte_end":16050,"line_start":534,"line_end":534,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":16265,"byte_end":16273,"line_start":546,"line_end":546,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":44926,"byte_end":44934,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/language/mod.rs","byte_start":48031,"byte_end":48039,"line_start":154,"line_end":154,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":159},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":1972,"byte_end":1990,"line_start":78,"line_end":78,"column_start":6,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":3267,"byte_end":3272,"line_start":116,"line_end":116,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":198},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4077,"byte_end":4082,"line_start":145,"line_end":145,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":198},"to":{"krate":1,"index":2324}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4703,"byte_end":4711,"line_start":165,"line_end":165,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":16042,"byte_end":16050,"line_start":534,"line_end":534,"column_start":23,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":8708}},{"span":{"file_name":"/Users/connor/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":16265,"byte_end":16273,"line_start":546,"line_end":546,"column_start":23,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":225},"to":{"krate":2,"index":11108}}]}